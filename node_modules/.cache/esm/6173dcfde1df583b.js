let express,mongoose,bodyParser,indexRoutes,usersRoutes,authGuard;_e1d‍.x([["app",()=>app]]);_e1d‍.w("express",[["default",["express"],function(v){express=v}]]);_e1d‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_e1d‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_e1d‍.w("./routes/index",[["default",["indexRoutes"],function(v){indexRoutes=v}]]);_e1d‍.w("./routes/users",[["default",["usersRoutes"],function(v){usersRoutes=v}]]);_e1d‍.w("./middleware/authGuard",[["default",["authGuard"],function(v){authGuard=v}]]);//Require Express and Cors






const app = express();

//Mongo
const url = 'mongodb://127.0.0.1:27017/nodeDb'


mongoose.Promise = global.Promise;
mongoose.connect(url, {useNewUrlParser: true, useUnifiedTopology: true})

const db = mongoose.connection

db.once('open', _ => {
    _e1d‍.g.console.log('Database connected:', url)
})

db.on('error', err => {
    _e1d‍.g.console.error('connection error:', err)
})

/*app.use(authGuard.authGuard)*/
app.use(bodyParser.urlencoded({extended: true}))
app.use(bodyParser.json())
app.use(express.json());
app.use(indexRoutes)
app.use(usersRoutes)


